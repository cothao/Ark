{"version":3,"file":"bundle.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;ICNqBA,MAAM;EACvB,SAAAA,OAAYC,KAAK,EAAEC,CAAC,EAAGC,CAAC,EAAEC,SAAS,EAAE;IAAAC,eAAA,OAAAL,MAAA;IACnC,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACK,YAAY,GAAG,KAAK;IACzB,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,MAAM,GAAG,EAAE;IAChB,IAAI,CAACC,cAAc,GAAG,CAAC;IAE3BR,KAAK,CAACS,KAAK,CAACC,MAAM,CAAC;MACjBC,GAAG,EAAE,YAAY;MACjBC,MAAM,EAAEZ,KAAK,CAACS,KAAK,CAACI,oBAAoB,CAAC,QAAQ,EAAE;QAAEC,KAAK,EAAE,CAAC;QAAEC,GAAG,EAAE;MAAE,CAAC,CAAC;MACxEC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;IACFjB,KAAK,CAACS,KAAK,CAACC,MAAM,CAAC;MACjBC,GAAG,EAAE,WAAW;MAChBC,MAAM,EAAEZ,KAAK,CAACS,KAAK,CAACI,oBAAoB,CAAC,WAAW,EAAE;QACpDC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE;MACP,CAAC,CAAC;MACFC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;IACFjB,KAAK,CAACS,KAAK,CAACC,MAAM,CAAC;MACjBC,GAAG,EAAE,YAAY;MACjBC,MAAM,EAAEZ,KAAK,CAACS,KAAK,CAACI,oBAAoB,CAAC,YAAY,EAAE;QACrDC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE;MACP,CAAC,CAAC;MACFC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;IACFjB,KAAK,CAACS,KAAK,CAACC,MAAM,CAAC;MACjBC,GAAG,EAAE,aAAa;MAClBC,MAAM,EAAEZ,KAAK,CAACS,KAAK,CAACI,oBAAoB,CAAC,aAAa,EAAE;QACtDC,KAAK,EAAE,CAAC;QACRC,GAAG,EAAE;MACP,CAAC,CAAC;MACFC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,CAAC;IACX,CAAC,CAAC;IAGAjB,KAAK,CAACkB,OAAO,CAACC,GAAG,CAACC,MAAM,CAACnB,CAAC,EAAEC,CAAC,EAAE,QAAQ,CAAC;IAIxCF,KAAK,CAACkB,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC,IAAI,EAAElB,SAAS,CAAC;EAC3C;EAACmB,YAAA,CAAAvB,MAAA;IAAAY,GAAA;IAAAY,KAAA,EAED,SAAAC,QAAA,EAAU,CACV;EAAC;IAAAb,GAAA;IAAAY,KAAA,EAED,SAAAb,OAAA,EAAS,CAGT;EAAC;EAAA,OAAAX,MAAA;AAAA,KAKL","sources":["webpack://ark/webpack/bootstrap","webpack://ark/webpack/runtime/define property getters","webpack://ark/webpack/runtime/hasOwnProperty shorthand","webpack://ark/webpack/runtime/make namespace object","webpack://ark/./public/js/components/raptor.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default class Raptor {\r\n    constructor(scene, x , y, platforms) {\r\n      this.scene = scene;\r\n      this.isOverlapped = false;\r\n      this.isAlive = true;\r\n      this.health = 10;\r\n      this.tamePercentage = 0;\r\n      \r\n  scene.anims.create({\r\n    key: \"raptorIdle\",\r\n    frames: scene.anims.generateFrameNumbers(\"raptor\", { start: 0, end: 1 }),\r\n    frameRate: 10,\r\n    repeat: -1,\r\n  });\r\n  scene.anims.create({\r\n    key: \"raptorRun\",\r\n    frames: scene.anims.generateFrameNumbers(\"raptorRun\", {\r\n      start: 0,\r\n      end: 5,\r\n    }),\r\n    frameRate: 10,\r\n    repeat: -1,\r\n  });\r\n  scene.anims.create({\r\n    key: \"raptorBite\",\r\n    frames: scene.anims.generateFrameNumbers(\"raptorBite\", {\r\n      start: 0,\r\n      end: 9,\r\n    }),\r\n    frameRate: 10,\r\n    repeat: -1,\r\n  });\r\n  scene.anims.create({\r\n    key: \"raptorFaint\",\r\n    frames: scene.anims.generateFrameNumbers(\"raptorFaint\", {\r\n      start: 0,\r\n      end: 5,\r\n    }),\r\n    frameRate: 10,\r\n    repeat: -1,\r\n  });\r\n    \r\n\r\n    scene.physics.add.sprite(x, y, 'raptor')\r\n    \r\n\r\n    \r\n    scene.physics.add.collider(this, platforms);\r\n    }\r\n\r\n    preload() {\r\n    }\r\n\r\n    create() {\r\n      \r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n// export let raptorGuy = this.physics.add.sprite(600, 400, \"raptor\");"],"names":["Raptor","scene","x","y","platforms","_classCallCheck","isOverlapped","isAlive","health","tamePercentage","anims","create","key","frames","generateFrameNumbers","start","end","frameRate","repeat","physics","add","sprite","collider","_createClass","value","preload","default"],"sourceRoot":""}